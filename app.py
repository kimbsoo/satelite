# -*- coding: utf-8 -*-
"""app.py

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1IIb_rdUTAhHxpk861qqqfrMqmj9RMMDs
"""

from flask import Flask, render_template, request, jsonify
import cv2
from PIL import Image
import numpy as np

app = Flask(__name__)

def take_photo(filename='static/photo.jpg', quality=0.8):
    # ... 앞서 정의한 take_photo 함수의 내용을 여기에 그대로 삽입 ...
    # 자바스크립트를 사용하여 local webcam에 access
  js = Javascript('''
    async function takePhoto(quality) {
      const div = document.createElement('div');
      const capture = document.createElement('button');
      capture.textContent = 'Capture';
      div.appendChild(capture);

      const video = document.createElement('video');
      video.style.display = 'block';
      const stream = await navigator.mediaDevices.getUserMedia({video: true});

      document.body.appendChild(div);
      div.appendChild(video);
      video.srcObject = stream;
      await video.play();

      // 결과를 resize
      google.colab.output.setIframeHeight(document.documentElement.scrollHeight, true);

      // 클릭하여 이미지 캡쳐
      await new Promise((resolve) => capture.onclick = resolve);

      const canvas = document.createElement('canvas');
      canvas.width = video.videoWidth;
      canvas.height = video.videoHeight;
      canvas.getContext('2d').drawImage(video, 0, 0);
      stream.getVideoTracks()[0].stop();
      div.remove();
      return canvas.toDataURL('image/jpeg', quality);
    }
    ''')
  display(js)

@app.route('/')
def index():
    return render_template('index.html')

@app.route('/capture', methods=['POST'])
def capture():
    try:
        filename = take_photo('static/photo.jpg')
        return jsonify({'success': True, 'filename': filename})
    except Exception as err:
        return jsonify({'success': False, 'error': str(err)})

if __name__ == '__main__':
    app.run(debug=True)